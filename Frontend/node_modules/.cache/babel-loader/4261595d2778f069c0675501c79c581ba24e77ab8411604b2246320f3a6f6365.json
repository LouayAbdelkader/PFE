{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\louay\\\\OneDrive\\\\Desktop\\\\PFE\\\\Frontend\\\\src\\\\components\\\\Navbar.jsx\",\n  _s = $RefreshSig$();\n// src/components/Navbar.js\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  // Check if user is logged in on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n  }, []);\n\n  // Handle logout functionality\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n    navigate('/login');\n    window.location.reload(); // Optional: Refresh to clear state\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-light bg-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"navbar-brand\",\n        children: \"E-Commerce\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-nav\",\n        children: [isLoggedIn ?\n        /*#__PURE__*/\n        // Show logout button if logged in\n        _jsxDEV(\"button\", {\n          onClick: handleLogout,\n          className: \"nav-link btn btn-link\",\n          style: {\n            cursor: 'pointer'\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this) :\n        /*#__PURE__*/\n        // Show login/signup buttons if not logged in\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            className: \"nav-link\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            className: \"nav-link\",\n            children: \"Signup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/products\",\n          className: \"nav-link\",\n          children: \"Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"JNNAVcL03XZIkY/1G2PDQyJFRpk=\", false, function () {\n  return [useNavigate];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","_s","isLoggedIn","setIsLoggedIn","navigate","token","localStorage","getItem","handleLogout","removeItem","window","location","reload","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/louay/OneDrive/Desktop/PFE/Frontend/src/components/Navbar.jsx"],"sourcesContent":["// src/components/Navbar.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    // Check if user is logged in on component mount\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        setIsLoggedIn(!!token);\r\n    }, []);\r\n\r\n    // Handle logout functionality\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        setIsLoggedIn(false);\r\n        navigate('/login');\r\n        window.location.reload(); // Optional: Refresh to clear state\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">E-Commerce</Link>\r\n                <div className=\"navbar-nav\">\r\n                    {isLoggedIn ? (\r\n                        // Show logout button if logged in\r\n                        <button \r\n                            onClick={handleLogout} \r\n                            className=\"nav-link btn btn-link\"\r\n                            style={{ cursor: 'pointer' }}\r\n                        >\r\n                            Logout\r\n                        </button>\r\n                    ) : (\r\n                        // Show login/signup buttons if not logged in\r\n                        <>\r\n                            <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                            <Link to=\"/signup\" className=\"nav-link\">Signup</Link>\r\n                        </>\r\n                    )}\r\n                    <Link to=\"/products\" className=\"nav-link\">Products</Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;;EAE9B;EACAH,SAAS,CAAC,MAAM;IACZ,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3CJ,aAAa,CAAC,CAAC,CAACE,KAAK,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACvBF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChCN,aAAa,CAAC,KAAK,CAAC;IACpBC,QAAQ,CAAC,QAAQ,CAAC;IAClBM,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,oBACIf,OAAA;IAAKgB,SAAS,EAAC,+CAA+C;IAAAC,QAAA,eAC1DjB,OAAA;MAAKgB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtBjB,OAAA,CAACH,IAAI;QAACqB,EAAE,EAAC,GAAG;QAACF,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvDtB,OAAA;QAAKgB,SAAS,EAAC,YAAY;QAAAC,QAAA,GACtBZ,UAAU;QAAA;QACP;QACAL,OAAA;UACIuB,OAAO,EAAEZ,YAAa;UACtBK,SAAS,EAAC,uBAAuB;UACjCQ,KAAK,EAAE;YAAEC,MAAM,EAAE;UAAU,CAAE;UAAAR,QAAA,EAChC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;QAAA;QAET;QACAtB,OAAA,CAAAE,SAAA;UAAAe,QAAA,gBACIjB,OAAA,CAACH,IAAI;YAACqB,EAAE,EAAC,QAAQ;YAACF,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACnDtB,OAAA,CAACH,IAAI;YAACqB,EAAE,EAAC,SAAS;YAACF,SAAS,EAAC,UAAU;YAAAC,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA,eACvD,CACL,eACDtB,OAAA,CAACH,IAAI;UAACqB,EAAE,EAAC,WAAW;UAACF,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAClB,EAAA,CA5CID,MAAM;EAAA,QAESL,WAAW;AAAA;AAAA4B,EAAA,GAF1BvB,MAAM;AA8CZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}